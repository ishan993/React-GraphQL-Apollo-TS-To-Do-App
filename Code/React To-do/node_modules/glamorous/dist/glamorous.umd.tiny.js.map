{"version":3,"file":"glamorous.umd.tiny.js","sources":["../src/react-compat.js","../src/constants.js","../src/get-glamor-classname.js","../src/create-glamorous.js","../src/tiny.js"],"sourcesContent":["import React from 'react'\n\nlet PropTypes\n\n/* istanbul ignore next */\nif (React.version.slice(0, 4) === '15.5') {\n  /* istanbul ignore next */\n  try {\n    PropTypes = require('prop-types')\n    /* istanbul ignore next */\n  } catch (error) {\n    // ignore\n  }\n}\n/* istanbul ignore next */\nPropTypes = PropTypes || React.PropTypes\n\nexport {PropTypes}\n\n/*\neslint\n  import/no-mutable-exports:0,\n  import/prefer-default-export:0,\n  react/no-deprecated:0\n */\n","export const CHANNEL = '__glamorous__'\n","import {css, styleSheet} from 'glamor'\n/**\n * This function takes a className string and gets all the\n * associated glamor styles. It's used to merge glamor styles\n * from a className to make sure that specificity is not\n * a problem when passing a className to a component.\n * @param {String} [className=''] the className string\n * @return {Object} { glamorStyles, glamorlessClassName }\n *   - glamorStyles is an array of all the glamor styles objects\n *   - glamorlessClassName is the rest of the className string\n *     without the glamor classNames\n */\nfunction extractGlamorStyles(className = '') {\n  return className.toString().split(' ').reduce((groups, name) => {\n    if (name.indexOf('css-') === 0) {\n      const style = getGlamorStylesFromClassName(name)\n      groups.glamorStyles.push(style)\n    } else {\n      // eslint-disable-next-line max-len\n      groups.glamorlessClassName = `${groups.glamorlessClassName} ${name}`.trim()\n    }\n    return groups\n  }, {glamorlessClassName: '', glamorStyles: []})\n}\n\nexport default getGlamorClassName\n\nfunction getGlamorClassName(styles, props, cssOverrides, theme, context) {\n  let current\n  const mappedArgs = []\n  const nonGlamorClassNames = []\n  for (let i = 0; i < styles.length; i++) {\n    current = styles[i]\n    if (typeof current === 'function') {\n      const result = current(props, theme, context)\n      if (typeof result === 'string') {\n        processStringClass(result, mappedArgs, nonGlamorClassNames)\n      } else {\n        mappedArgs.push(result)\n      }\n    } else if (typeof current === 'string') {\n      processStringClass(current, mappedArgs, nonGlamorClassNames)\n    } else {\n      mappedArgs.push(current)\n    }\n  }\n  const {\n    glamorStyles: parentGlamorStyles,\n    glamorlessClassName,\n  } = extractGlamorStyles(props.className)\n  const glamorClassName = css(\n    ...mappedArgs,\n    ...parentGlamorStyles,\n    cssOverrides,\n  ).toString()\n  const extras = nonGlamorClassNames.join(' ')\n  return `${glamorlessClassName} ${glamorClassName} ${extras}`.trim()\n}\n\nfunction processStringClass(str, mappedArgs, nonGlamorClassNames) {\n  const className = getGlamorStylesFromClassName(str)\n  if (className) {\n    mappedArgs.push(className)\n  } else {\n    nonGlamorClassNames.push(str)\n  }\n}\n\nfunction getGlamorStylesFromClassName(className) {\n  const id = className.slice('css-'.length)\n  if (styleSheet.registered[id]) {\n    return styleSheet.registered[id].style\n  } else {\n    return null\n  }\n}\n","/*\n * This is a relatively small abstraction that's ripe for open sourcing.\n * Documentation is in the README.md\n */\nimport React, {Component} from 'react'\nimport {PropTypes} from './react-compat'\nimport {CHANNEL} from './constants'\nimport getGlamorClassName from './get-glamor-classname'\n\nexport default createGlamorous\n\nfunction createGlamorous(splitProps) {\n  // TODO: in a breaking version, make this default to true\n  glamorous.config = {useDisplayNameInClassName: false}\n\n  return glamorous\n\n  /**\n  * This is the main export and the function that people\n  * interact with most directly.\n  *\n  * It accepts a component which can be a string or\n  * a React Component and returns\n  * a \"glamorousComponentFactory\"\n  * @param {String|ReactComponent} comp the component to render\n  * @param {Object} options helpful info for the GlamorousComponents\n  * @return {Function} the glamorousComponentFactory\n  */\n  function glamorous(comp, {rootEl, displayName, forwardProps = []} = {}) {\n    return glamorousComponentFactory\n\n    /**\n     * This returns a React Component that renders the comp (closure)\n     * with a className based on the given glamor styles object(s)\n     * @param {...Object|Function} styles the styles to create with glamor.\n     *   If any of these are functions, they are invoked with the component\n     *   props and the return value is used.\n     * @return {ReactComponent} the ReactComponent function\n     */\n    function glamorousComponentFactory(...styles) {\n      /**\n       * This is a component which will render the comp (closure)\n       * with the glamorous styles (closure). Forwards any valid\n       * props to the underlying component.\n       * @param {Object} theme the theme object\n       * @return {ReactElement} React.createElement\n       */\n      class GlamorousComponent extends Component {\n        state = {theme: null}\n        setTheme = theme => this.setState({theme})\n\n        componentWillMount() {\n          const {theme} = this.props\n          if (this.context[CHANNEL]) {\n            // if a theme is provided via props,\n            // it takes precedence over context\n            this.setTheme(theme ? theme : this.context[CHANNEL].getState())\n          } else {\n            this.setTheme(theme || {})\n          }\n        }\n\n        componentWillReceiveProps(nextProps) {\n          if (this.props.theme !== nextProps.theme) {\n            this.setTheme(nextProps.theme)\n          }\n        }\n\n        componentDidMount() {\n          if (this.context[CHANNEL] && !this.props.theme) {\n            // subscribe to future theme changes\n            this.unsubscribe = this.context[CHANNEL].subscribe(this.setTheme)\n          }\n        }\n\n        componentWillUnmount() {\n          // cleanup subscription\n          this.unsubscribe && this.unsubscribe()\n        }\n\n        render() {\n          // in this function, we're willing to sacrafice a little on\n          // readability to get better performance because it actually\n          // matters.\n          const props = this.props\n          const {toForward, cssOverrides} = splitProps(\n            props,\n            GlamorousComponent,\n          )\n\n          // freeze the theme object in dev mode\n          const theme = process.env.NODE_ENV === 'production' ?\n            this.state.theme :\n            Object.freeze(this.state.theme)\n\n          // create className to apply\n          const fullClassName = getGlamorClassName(\n            GlamorousComponent.styles,\n            props,\n            cssOverrides,\n            theme,\n            this.context,\n          )\n          const debugClassName = glamorous.config.useDisplayNameInClassName ?\n            cleanClassname(GlamorousComponent.displayName) :\n            ''\n          const className = `${fullClassName} ${debugClassName}`.trim()\n\n          return React.createElement(GlamorousComponent.comp, {\n            ref: props.innerRef,\n            ...toForward,\n            className,\n          })\n        }\n      }\n\n      GlamorousComponent.propTypes = {\n        className: PropTypes.string,\n        cssOverrides: PropTypes.object,\n        theme: PropTypes.object,\n        innerRef: PropTypes.func,\n        glam: PropTypes.object,\n      }\n\n      const defaultContextTypes = {\n        [CHANNEL]: PropTypes.object,\n      }\n\n      let userDefinedContextTypes = null\n\n      // configure the contextTypes to be settable by the user,\n      // however also retaining the glamorous channel.\n      Object.defineProperty(GlamorousComponent, 'contextTypes', {\n        enumerable: true,\n        configurable: true,\n        set(value) {\n          userDefinedContextTypes = value\n        },\n        get() {\n          // if the user has provided a contextTypes definition,\n          // merge the default context types with the provided ones.\n          if (userDefinedContextTypes) {\n            return {\n              ...defaultContextTypes,\n              ...userDefinedContextTypes,\n            }\n          }\n          return defaultContextTypes\n        },\n      })\n\n      Object.assign(\n        GlamorousComponent,\n        getGlamorousComponentMetadata({\n          comp,\n          styles,\n          rootEl,\n          forwardProps,\n          displayName,\n        }),\n      )\n      return GlamorousComponent\n    }\n  }\n\n  function getGlamorousComponentMetadata({\n    comp,\n    styles,\n    rootEl,\n    forwardProps,\n    displayName,\n  }) {\n    const componentsComp = comp.comp ? comp.comp : comp\n    return {\n      // join styles together (for anyone doing: glamorous(glamorous.a({}), {}))\n      styles: when(comp.styles, styles),\n      // keep track of the ultimate rootEl to render (we never\n      // actually render anything but\n      // the base component, even when people wrap a glamorous\n      // component in glamorous\n      comp: componentsComp,\n      rootEl: rootEl || componentsComp,\n      // join forwardProps (for anyone doing: glamorous(glamorous.a({}), {}))\n      forwardProps: when(comp.forwardProps, forwardProps),\n      // set the displayName to something that's slightly more\n      // helpful than `GlamorousComponent` :)\n      displayName: displayName || `glamorous(${getDisplayName(comp)})`,\n    }\n  }\n\n  function when(comp, prop) {\n    return comp ? comp.concat(prop) : prop\n  }\n\n  function getDisplayName(comp) {\n    return typeof comp === 'string' ?\n      comp :\n      comp.displayName || comp.name || 'unknown'\n  }\n}\n\nfunction cleanClassname(className) {\n  return className.replace(/ /g, '-').replace(/[^A-Za-z0-9\\-_]/g, '_')\n}\n","/* eslint no-unused-vars:0 */\nimport createGlamorous from './create-glamorous'\n\nfunction splitProps({\n  css: cssOverrides = {},\n  // these are plucked off\n  theme, // because they\n  className, // should never\n  innerRef, // be forwarded\n  glam, // to the lower\n  // component ever\n  ...rest\n}) {\n  return {toForward: rest, cssOverrides}\n}\n\nconst glamorous = createGlamorous(splitProps)\n\nexport default glamorous\n"],"names":["PropTypes","React","version","slice","require","error","CHANNEL","extractGlamorStyles","className","toString","split","reduce","groups","name","indexOf","style","getGlamorStylesFromClassName","glamorStyles","push","glamorlessClassName","trim","getGlamorClassName","styles","props","cssOverrides","theme","context","current","mappedArgs","nonGlamorClassNames","i","length","result","parentGlamorStyles","glamorClassName","css","extras","join","processStringClass","str","id","styleSheet","registered","createGlamorous","splitProps","config","useDisplayNameInClassName","glamorous","comp","rootEl","displayName","forwardProps","glamorousComponentFactory","GlamorousComponent","state","setTheme","setState","getState","nextProps","unsubscribe","subscribe","toForward","Object","freeze","fullClassName","debugClassName","cleanClassname","createElement","innerRef","Component","propTypes","string","object","func","defaultContextTypes","userDefinedContextTypes","defineProperty","value","assign","getGlamorousComponentMetadata","componentsComp","when","getDisplayName","prop","concat","replace","glam","rest"],"mappings":"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"}